<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.acsm.module.transaction.sales.dal.mysql.salespackage.PackageMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->
    <select id="findSales" resultType="cn.acsm.module.transaction.sales.dal.dataobject.shelves.ShelvesSalesRespDo">
        select
        id ,
        name as name
        FROM sales_package
        where deleted = 0
        <if test=" salesName != null and salesName != '' ">
            AND name like CONCAT('%',#{salesName},'%')
        </if>
    </select>

    <select id="findSpecifications" resultType="cn.acsm.module.transaction.sales.dal.dataobject.shelves.ShelvesSalesRespDo">
        select
        sps.id ,
        sps.specifications_name AS name,
        sps.packaging_type AS packagingType,
        sps.packaging_type_name AS packagingTypeName,
        sps.number,
        sps.unit,
        sps.unit_name AS unitName,
        sps.packaging,
        sps.packaging_name AS packagingName,
        sps.measurement_unit AS measurementUnit,
        sps.measurement_unit_name AS measurementUnitName,
        sps.purchase_price AS purchasePrice,
        sps.selling_price AS sellingPrice,
        CONCAT(sps.number,sps.unit_name,"/",sps.packaging_name) AS specifications,
        sp.name AS salesName,
        spc.category_name AS classifyName
        FROM sales_package_specification sps
        LEFT JOIN sales_package sp on sps.package_id = sp.id
        LEFT JOIN sales_package_classify spc on spc.id = sp.mini_classification_id_one
        where sps.deleted = 0 and sp.deleted = 0
        <if test=" salesId !=null and salesId!='' ">
            AND sps.package_id=#{salesId}
        </if>
        <if test=" salesName != null and salesName != '' ">
            AND sp.name like CONCAT('%',#{salesName},'%')
        </if>
    </select>

    <select id="findSpecificationsVo" resultType="cn.acsm.module.transaction.sales.dal.dataobject.shelves.ShelvesSalesRespDo">
        select
        sps.id ,
        sps.specifications_name AS name,
        sps.packaging_type AS packagingType,
        sps.packaging_type_name AS packagingTypeName,
        sps.number,
        sps.unit,
        sps.unit_name AS unitName,
        sps.packaging,
        sps.packaging_name AS packagingName,
        sps.measurement_unit AS measurementUnit,
        sps.measurement_unit_name AS measurementUnitName,
        sps.purchase_price AS purchasePrice,
        sps.selling_price AS sellingPrice,
        CONCAT(sps.number,sps.unit_name,"/",sps.packaging_name) AS specifications,
        sp.name AS salesName,
        spc.category_name AS classifyName
        FROM sales_package_specification sps
        LEFT JOIN sales_package sp on sps.package_id = sp.id
        LEFT JOIN sales_package_classify spc on spc.id = sp.mini_classification_id_one
        where sps.deleted = 0
        <if test=" salesId !=null and salesId!='' ">
            AND sps.package_id=#{salesId}
        </if>
        <if test=" salesName != null and salesName != '' ">
            AND sp.name like CONCAT('%',#{salesName},'%')
        </if>
        LIMIT #{pageNo} ,#{pageSize}
    </select>

    <select id="findSpecificationsVoCount" resultType="java.lang.Long">
        select
        COUNT(1)
        FROM sales_package_specification sps
        where sps.deleted = 0
        <if test=" salesId !=null and salesId!='' ">
            AND sps.package_id=#{salesId}
        </if>
        <if test=" salesName != null and salesName != '' ">
            AND sp.name like CONCAT('%',#{salesName},'%')
        </if>
    </select>
</mapper>
